<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.0.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.0.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.0.xsd">

	<!-- 配置自动扫描 -->
	<context:component-scan base-package="spring.tx.xml"></context:component-scan>
	
	<!-- 引入外部属性文件 注意使用路径方式引用-->
	<context:property-placeholder location="spring/tx/xml/db.properties"/>
	
	<!-- 配置c3p0数据源 -->
	<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
		<property name="jdbcUrl" value="${jdbcUrl}"></property>
	 	<property name="user" value="${user}"></property>
	 	<property name="password" value="${password}"></property>
	 	<property name="driverClass" value="${driverClass}"></property>
	 	<property name="initialPoolSize" value="${initPoolSize}"></property>
	 	<property name="maxPoolSize" value="${maxPoolSize}"></property>
	</bean>
	
	<bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
		<property name="dataSource" ref="dataSource"></property>
	</bean>
	
	<!--start 声明式方式配置事务（@Transactional注解） -->
	
	<!-- 
		1.配置事务管理器 
		-->
	<!-- <bean id="transactionManager" 
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource"></property>
	</bean> -->
	
	<!-- 
		2.启用事务注解启动
		在需要事务的方法上加@Transactional注解即可使用spring的事务
		 -->
	<!-- <tx:annotation-driven transaction-manager="transactionManager"/> -->
	
	<!--end 声明式方式配置事务（@Transactional注解） -->
	
	
	<!-- 配置 BEAN -->
	<bean id="bookShopDao" class="spring.tx.xml.BookShopDaoImpl">
		<property name="jdbcTemplate" ref="jdbcTemplate"></property>
	</bean>
	
	<bean id="bookShopService" class="spring.tx.xml.service.impl.BookShopServiceImpl">
		<property name="bookShopDao" ref="bookShopDao"></property>
	</bean>
	
	<bean id="cashier" class="spring.tx.xml.service.impl.CashierImpl">
		<property name="bookShopService" ref="bookShopService"></property>
	</bean>
	
	<!--start XML形式配置事务 -->
	
	<!-- 1。配置事务管理器 -->
	<bean id="transactionManager" 
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource"></property>
	</bean>
	
	<!-- 2.配置事务属性 -->
	<tx:advice id="txAdvice" transaction-manager="transactionManager">
		<tx:attributes>
			<!-- 根据方法名指定事务属性 -->
			<tx:method name="purcharse" propagation="REQUIRES_NEW"/>
			<tx:method name="get*" read-only="true"/>
			<tx:method name="find*" read-only="true"/>
			<tx:method name="*"/>
		</tx:attributes>
	</tx:advice>
	
	<!-- 3.配置事务切点。（事务作用在哪些方法上） -->
	<!-- 指定事务的【切面】 -->
	<aop:config>
		<aop:pointcut expression="execution(* spring.tx.xml.service.*.*(..))" 
			id="txPointCut"/>
		<!-- 将事务切面和事务属性关联起来 -->
		<aop:advisor advice-ref="txAdvice" pointcut-ref="txPointCut"/>
	</aop:config>
	
	<!--end XML形式配置事务  -->
</beans>
