<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:util="http://www.springframework.org/schema/util"
	xmlns:p="http://www.springframework.org/schema/p"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-4.0.xsd">
		
	 <!--bean的作用域 -->
	 
	 
	 <!-- 配置一个 bean 
		class:bean的全类名，通过反射的方式在IOC容器中创建Bean，要求Bean中必须有无参构造器!!!!
		id:标识容器中的bean，id必须唯一。 -->
		
		
	<!-- 
		默认作用域是单例的：singleton
		IOC容器初始化时创建bean实例，在整个容器的生命周期内只创建这一个bean。
		只会产生一个对象。所以两次实例化返回同一对象 -->
	 <bean id="car" class="spring.beans.Car">
	 	<property name="name" value="Audi"></property>
	 	<property name="price" value="300000"></property>
	 	<property name="maxSpeed" value="100"></property>
	 </bean>
	 
	 <!--原型的：prototype
	 	IOC容器初始化时不创建bean的实例对象，而是在每次请求时，都创建一个新的bean实例。
	 	每次向容器获取Bean，都会创建一个新的bean
	 	例如：与struts2整合时，每次action的请求都会创建一个实例。
	 	  -->
	 <bean id="car2" class="spring.beans.Car" scope="prototype">
	 	<property name="name" value="Audi"></property>
	 	<property name="price" value="300000"></property>
	 	<property name="maxSpeed" value="100"></property>
	 </bean>
	 
	 <!-- 
	 	还有两个作用域：
	 	request：每次http请求都会创建一个新的Bean，该作用域仅适合WebApplicationContext环境
	 	session：同一个HTTP session共享一个bean，不同session使用不同的bean，仅适合WebApplicationContext环境
	  -->
</beans>
